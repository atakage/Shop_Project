<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/security https://www.springframework.org/schema/security/spring-security-5.2.xsd">




	<bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<constructor-arg index="0" value="4"/>
	</bean>


	<context:component-scan base-package="com.biz.shop.auth"/>
	<bean id="authProviderImpl" class="com.biz.shop.auth.AuthProviderImpl">
	</bean>
	
	
	<!-- 
	
	hasRole()에서 ROLE_USER와 USER의 값 검사
	security 4.2 미만에서는 반드시 DB에 ROLE_USER라고 저장되어 있으면
	hasRole('ROLE_ADMIN')이라고 검사를 해야 함
	
	4.2 이상에서는 선택적으로 변경이 됨
	DB에 ROLE_ADMIN이라고 저장되어 있을 때
	검사할 때는 hasRole('USER')라고만 검사를 해도 통과가 됨
	간혹 이 규칙이 적용이 안 되는 버전이 있음
	
	편의상 DB에 ROLE_USER와, USER를 같이 등록해 둠
	이러한 문제를 해결 하기 위해 4.2이상에서는 bean을 하나 설정하여 DB에 ROLE_USER라고
	저장되어 있어도 hasRole('USER')라고 검사하도록 강제로 적용할 수 있음 
	
	 -->
	
	<security:authentication-manager>
		<security:authentication-provider ref="authProviderImpl"/>
	</security:authentication-manager>
	
	
	<security:http auto-config="true" use-expressions="true">
		<security:csrf disabled="false"/>
		
		<security:intercept-url pattern="/admin/**" access="hasRole('ADMIN')"/>
		<security:intercept-url pattern="/**" access="permitAll()"/>
		
		<security:form-login login-page="/login" login-processing-url=""
			default-target-url="" username-parameter="username" password-parameter="password"/>
			
			
		<security:logout logout-url="/logout" invalidate-session="true" delete-cookies="true" logout-success-url="/"/>
			
	</security:http>
	

</beans>
